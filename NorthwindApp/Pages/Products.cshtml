@page
@using NorthwindApp.Helpers
@using NorthwindApp.Models
@model ProductsModel
@{
    string previousDisabled = !Model.Products.HasPreviousPage ? Constants.Disabled : string.Empty;
    string nextDisabled = !Model.Products.HasNextPage ? Constants.Disabled : string.Empty;
    int.TryParse(ViewData["ProductsPageSize"].ToString(), out int productsPageSize);
}

@if (productsPageSize > 0) { 
    <div class="pagination-container">
        <a asp-page="./Products"
           asp-route-pageIndex="@(Model.Products.PageIndex - 1)"
           class="btn btn-dark @previousDisabled">
            Previous
        </a>

        <a asp-page="./Products"
           asp-route-pageIndex="@(Model.Products.PageIndex + 1)"
           class="btn btn-dark @nextDisabled">
            Next
        </a>
    </div>
}

<table id="products" class="table table-striped">
    <thead class="thead-dark">
    <tr>
        @foreach (string rowName in Model.RowNames)
        {
            <th>@rowName</th>
        }
    </tr>
    </thead>

    <tbody>
    @foreach (Product product in Model.Products)
    {
        <tr>
            <td>@product.ProductId</td>
            <td>@product.ProductName</td>
            <td>@product.Supplier.CompanyName</td>
            <td>@product.Category.CategoryName</td>
            <td>@product.QuantityPerUnit</td>
            <td>@product.UnitPrice</td>
            <td>@product.UnitsInStock</td>
            <td>@product.UnitsOnOrder</td>
            <td>@product.ReorderLevel</td>
            <td>@product.Discontinued</td>
        </tr>
    }
    </tbody>
</table>